{"version":3,"sources":["shared/Quotes.js","components/QuoteGeneratorComponent.js","components/NavigationComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/ImageGalleryComponent.js","components/CountdownComponent.js","components/FooterComponent.js","shared/Characters.js","components/CharacterGuideComponent.js","shared/Episodes.js","components/EpisodeGuideComponent.js","components/EpisodeInfoComponent.js","components/SliderPuzzleComponent.js","components/MemeGeneratorComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["QUOTES","id","text","QuoteGenerator","props","state","quotes","quoteId","RandomQuoteId","bind","this","setState","Math","ceil","random","length","class","onClick","Component","Navigation","useState","isOpen","setIsOpen","className","expand","href","navbar","Header","Fragment","src","alt","Home","width","height","frameborder","allow","allowfullscreen","CHARACTERS","name","imagescn","imagescn2","imagescn3","sum","home","Species","gender","eye","skin","color","image","colorcard","RenderCharacter","ch","color2","lg","Card","body","left","cascade","style","padding","CharacterGuide","characters","characterList","map","EPISODES","imagetb","sum_short","sum_long","director","writer","RenderEpisodeCard","ep","key","to","EpisodeGuide","episodes","episodesCardList","RenderEpisodePage","episode","top","EpisodeInfo","SliderPuzzle","clickTile","swapTiles","reset","shuffle","document","getElementById","row","column","row2","floor","column2","cell1","cell2","temp","e","display","MemeGenerator","topText","bottomText","randomImage","allMemesImg","url","handleChange","chooseRandom","max","event","target","value","arrayIndex","getRandomInt","placeholder","onChange","Main","Puzzle","exact","path","component","match","filter","params","episodeId","App","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+YAAaA,EAAS,CAClB,CACIC,GAAI,EACJC,KAAM,6DAEV,CACID,GAAI,EACJC,KAAM,4CAEV,CACID,GAAI,EACJC,KAAM,sDAEV,CACID,GAAI,EACJC,KAAM,+DAEV,CACID,GAAI,EACJC,KAAM,0DAEV,CACID,GAAI,EACJC,KAAM,8DAEV,CACID,GAAI,EACJC,KAAM,8EAEV,CACID,GAAI,EACJC,KAAM,qCAEV,CACID,GAAI,EACJC,KAAM,sGAEV,CACID,GAAI,GACJC,KAAM,0HAEV,CACID,GAAI,GACJC,KAAM,qNAEV,CACID,GAAI,GACJC,KAAM,sCAEV,CACID,GAAI,GACJC,KAAM,uDCrBCC,E,YA1BX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,OAAQN,EACRO,QAAS,GAEb,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBANN,E,6EAUfC,KAAKC,SAAS,CACVJ,QAASK,KAAKC,KAAKD,KAAKE,UAAUJ,KAAKL,MAAMC,OAAOS,OAAO,Q,+BAM/D,OACI,6BACI,yBAAKC,MAAM,mBAAX,IAA+BN,KAAKL,MAAMC,OAAOI,KAAKL,MAAME,SAASL,KAArE,KACA,4BAAQc,MAAM,sCAAsCC,QAASP,KAAKF,eAAlE,qB,GArBaU,a,gBC8CdC,EAjCI,SAACf,GAAW,IAAD,EACAgB,oBAAS,GADT,mBACrBC,EADqB,KACbC,EADa,KAK5B,OAEE,yBAAKC,UAAU,wBACb,kBAAC,IAAD,CAAQC,OAAO,MACb,kBAAC,IAAD,CAAaC,KAAK,SAAlB,QACA,kBAAC,IAAD,CAAeR,QAPN,kBAAMK,GAAWD,MAQ1B,kBAAC,IAAD,CAAUA,OAAQA,EAAQK,QAAM,GAC9B,kBAAC,IAAD,CAAKH,UAAU,UAAUG,QAAM,GAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASD,KAAK,eAAd,oBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,KAAK,aAAd,kBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,KAAK,WAAd,WAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,KAAK,SAAd,wBCzBCE,E,iLATP,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKL,UAAU,kBAAiB,yBAAKM,IAAI,0BAA0BN,UAAU,wBAAwBO,IAAI,sBACzG,kBAAC,EAAD,W,GALSZ,aCmBNa,E,iLAfP,OACI,6BACI,yBAAKf,MAAM,oBACX,yBAAKA,MAAM,gBAAX,4TACA,yBAAKA,MAAM,oBACP,4BAAQgB,MAAM,OAAOC,OAAO,OAAOJ,IAAI,uDAAuDK,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,KAEjN,gCACI,kBAAC,EAAD,Y,GAVDlB,a,GCHQA,YCAHA,YCAHA,Y,0CCFRmB,EAAa,CACtB,CACIpC,GAAI,EACJqC,KAAM,aACNC,SAAU,2CACVC,UAAW,4CACXC,UAAW,4CACXC,IAAK,0nBACLC,KAAK,UACLC,QAAS,QACTC,OAAQ,OACRC,IAAK,QACLC,KAAM,QACNC,MAAO,yBAEX,CACI/C,GAAI,EACJqC,KAAM,YACNC,SAAU,wCACVC,UAAW,yCACXC,UAAW,yCACXC,IAAK,ooBACLC,KAAK,UACLC,QAAS,SACTC,OAAQ,OACRC,IAAK,QACLC,KAAM,QACNC,MAAO,yBAEX,CACI/C,GAAI,EACJqC,KAAM,mBACNW,MAAO,mCACPV,SAAU,wCACVC,UAAW,yCACXC,UAAW,yCACXC,IAAK,8lBACLC,KAAK,WACLC,QAAS,QACTC,OAAQ,SACRC,IAAK,QACLC,KAAK,QACLC,MAAO,yBAEX,CACI/C,GAAI,EACJqC,KAAM,QACNW,MAAO,mCACPV,SAAU,qCACVC,UAAW,sCACXC,UAAW,sCACXC,IAAK,soBACLC,KAAK,YACLC,QAAS,WACTC,OAAQ,OACRC,IAAK,QACLC,KAAK,MACLC,MAAO,yBAEX,CACI/C,GAAI,EACJqC,KAAM,cACNW,MAAO,mCACPV,SAAU,0CACVC,UAAW,2CACXC,UAAW,2CACXC,IAAK,slBACLC,KAAK,WACLC,QAAS,QACTC,OAAQ,SACRC,IAAK,QACLC,KAAK,OACLC,MAAO,yBAEX,CACI/C,GAAI,EACJqC,KAAM,QACNW,MAAO,mCACPV,SAAU,kCACVC,UAAW,mCACXC,UAAW,mCACXC,IAAK,2oBACLC,KAAK,WACLC,QAAS,iBACTC,OAAQ,wBACRC,IAAK,MACLC,KAAK,kBACLC,MAAO,yBAEX,CACI/C,GAAI,EACJqC,KAAM,aACNW,MAAO,mCACPV,SAAU,sCACVC,UAAW,uCACXC,UAAW,uCACXC,IAAK,2oBACLC,KAAK,UACLC,QAAS,QACTC,OAAQ,OACRC,IAAK,QACLC,KAAK,SACLC,MAAO,yBAGX,CACI/C,GAAI,EACJqC,KAAM,iBACNW,MAAO,mCACPV,SAAU,qCACVC,UAAW,sCACXC,UAAW,sCACXC,IAAK,qpBACLC,KAAK,UACLC,QAAS,gBACTC,OAAQ,MACRC,IAAK,MACLC,KAAK,QACLC,MAAO,wBACPE,UAAW,gC,OCnGnB,SAASC,EAAT,GAAgC,IAANC,EAAK,EAALA,GACxB,OAEE,kBAAC,IAAD,CAAK7B,UAAW6B,EAAGC,OAASC,GAAI,GAEhC,kBAACC,EAAA,EAAD,CAAMhC,UAAU,UAEhB,kBAAC,IAAD,CAAOiC,MAAI,GACP,kBAAC,IAAD,CAAUjC,UAAW6B,EAAGJ,OACvBI,EAAGd,MAGJ,kBAAC,IAAD,KAAYc,EAAGV,KACf,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUnB,UAAU,aAClB,kBAAC,IAAD,CAAMkC,MAAI,EAACC,SAAO,GAChB,6BACF,yBAAK7B,IAAKuB,EAAGb,SAAUoB,MAAO,CAAEC,QAAS,UAAW9B,IAAI,WADtD,IACkE,mCACpE,yBAAKD,IAAKuB,EAAGZ,UAAWmB,MAAO,CAAEC,QAAS,UAAW9B,IAAI,WAFvD,KAEmE,mCACrE,yBAAKD,IAAKuB,EAAGX,UAAWkB,MAAO,CAAEC,QAAS,UAAW9B,IAAI,aAGvD,6CARJ,IAQgCsB,EAAGR,QAC/B,6BACA,4CAVJ,IAU+BQ,EAAGP,OAC9B,6BACA,+CAZJ,IAYkCO,EAAGN,IACjC,6BACA,gDAdJ,IAcmCM,EAAGL,KAClC,6BACA,iDAhBJ,IAgBoCK,EAAGT,U,IAuChCkB,E,YAxBb,WAAYzD,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXyD,WAAYzB,GAHG,E,sEAOf,IAAM0B,EAAgBrD,KAAKL,MAAMyD,WAAWE,KAAI,SAAAZ,GAC9C,OACI,kBAACD,EAAD,CAAiBC,GAAIA,OAGzB,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,KACGW,Q,GAhBgB7C,aChEhB+C,EAAW,CACpB,CACIhE,GAAI,EACJqC,KAAM,YACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,wEACXC,SAAU,srCACVC,SAAU,cACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,+BAEf,CACIjD,GAAI,EACJqC,KAAM,uBACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,oEACXC,SAAU,2gCACVC,SAAU,gBACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,+BAEf,CACIjD,GAAI,EACJqC,KAAM,qBACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,iEACXC,SAAU,urCACVC,SAAU,eACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,+BAEf,CACIjD,GAAI,EACJqC,KAAM,uBACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,iFACXC,SAAU,qsCACVC,SAAU,sBACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,+BAEf,CACIjD,GAAI,EACJqC,KAAM,4BACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,wEACXC,SAAU,0pCACVC,SAAU,cACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,gBAGf,CACIjD,GAAI,EACJqC,KAAM,0BACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,sEACXC,SAAU,qsCACVC,SAAU,gBACVC,OAAQ,mBACRtB,MAAO,wBACPE,UAAW,gBAGf,CACIjD,GAAI,EACJqC,KAAM,2BACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,wEACXC,SAAU,kqCACVC,SAAU,eACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,gBAEf,CACIjD,GAAI,EACJqC,KAAM,wBACNW,MAAO,mCACPV,SAAU,mCACV2B,QAAS,kCACTC,UAAW,+DACXC,SAAU,4sCACVC,SAAU,gBACVC,OAAQ,cACRtB,MAAO,wBACPE,UAAW,iB,eCnGnB,SAASqB,EAAT,GAAkC,IAANC,EAAK,EAALA,GAC1B,OAEE,kBAAC,IAAD,CAAKjD,UAAWiD,EAAGnB,OAAQoB,IAAKD,EAAGvE,GAAIqD,GAAI,GAE3C,kBAAC,IAAD,CAAM/B,UAAU,UAGhB,kBAAC,IAAD,CAAOiC,MAAI,EAAEjC,UAAWiD,EAAGtB,WAC3B,kBAAC,IAAD,CAAMwB,GAAE,oBAAeF,EAAGvE,KAAM,yBAAK4B,IAAK2C,EAAGjC,SAAUhB,UAAU,cAAjE,KAEI,kBAAC,IAAD,CAAUA,UAAWiD,EAAGxB,OACvBwB,EAAGlC,MAGJ,kBAAC,IAAD,KAAYkC,EAAGL,WACf,kBAAC,IAAD,KAAW,gDAAX,IAA0CK,EAAGH,SAAS,6BAAM,+CAA5D,IAA0FG,EAAGF,W,IAsCtFK,E,YAtBb,WAAYvE,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXuE,SAAUX,GAHK,E,sEAOf,IAAMY,EAAmBnE,KAAKL,MAAMuE,SAASZ,KAAI,SAAAQ,GAC/C,OACI,kBAACD,EAAD,CAAmBC,GAAIA,OAG3B,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,KACGK,Q,GAhBc3D,a,OChC3B,SAAS4D,EAAT,GAAuC,IAAXC,EAAU,EAAVA,QACxB,OACI,yBAAKxD,UAAU,WACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASyD,KAAG,EAACnD,IAAKkD,EAAQ9B,MAAOnB,IAAKiD,EAAQzC,OAC9C,kBAAC,IAAD,KACA,kBAAC,IAAD,KAAU,gCAASyC,EAAQzC,OAC3B,kBAAC,IAAD,KAAWyC,EAAQX,aAoCpBa,MAzBf,SAAqB7E,GAEjB,OAAIA,EAAM2E,QAIF,yBAAKxD,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OAEX,4BAAI,kBAAC,IAAD,CAAMmD,GAAG,aAAT,YAAJ,MAA4CtE,EAAM2E,QAAQzC,MAC1D,+BAGR,yBAAKf,UAAU,OACX,kBAACuD,EAAD,CAAmBC,QAAS3E,EAAM2E,YAMlD,+BC0EWG,G,mBAhHb,WAAY9E,GAAQ,IAAD,8BACf,4CAAMA,KACCC,MAAQ,GAGf,EAAK8E,UAAY,EAAKA,UAAU1E,KAAf,gBACjB,EAAK2E,UAAY,EAAKA,UAAU3E,KAAf,gBACjB,EAAK4E,MAAQ,EAAKA,MAAM5E,KAAX,gBACb,EAAK6E,QAAU,EAAKA,QAAQ7E,KAAb,gBARA,E,qEAYb8E,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,QAC9CgE,SAASC,eAAe,UAAUjE,UAAY,U,gCAI9C,IAAK,IAAIkE,EAAI,EAAEA,GAAK,EAAEA,IAClB,IAAK,IAAIC,EAAO,EAAEA,GAAQ,EAAEA,IAAU,CAEtC,IAAIC,EAAK/E,KAAKgF,MAAoB,EAAdhF,KAAKE,SAAa,GAClC+E,EAAQjF,KAAKgF,MAAoB,EAAdhF,KAAKE,SAAa,GAEzCJ,KAAK0E,UAAU,OAAOK,EAAIC,EAAO,OAAOC,EAAKE,M,gCAK3CC,EAAOC,GACb,IAAIC,EAAOT,SAASC,eAAeM,GAAOvE,UAC1CgE,SAASC,eAAeM,GAAOvE,UAAYgE,SAASC,eAAeO,GAAOxE,UAC1EgE,SAASC,eAAeO,GAAOxE,UAAYyE,I,gCAGrCP,EAAKC,EAAQO,GAInB,GAAU,SAHCV,SAASC,eAAe,OAAOC,EAAIC,GAC9BnE,UAEG,CAEhB,GAAImE,EAAO,GACsD,SAA1DH,SAASC,eAAe,OAAOC,GAAKC,EAAO,IAAInE,UAElD,YADAb,KAAK0E,UAAU,OAAOK,EAAIC,EAAO,OAAOD,GAAKC,EAAO,IAKxD,GAAIA,EAAO,GACsD,SAA1DH,SAASC,eAAe,OAAOC,GAAKC,EAAO,IAAInE,UAElD,YADAb,KAAK0E,UAAU,OAAOK,EAAIC,EAAO,OAAOD,GAAKC,EAAO,IAKxD,GAAID,EAAI,GACyD,SAA1DF,SAASC,eAAe,QAAQC,EAAI,GAAGC,GAAQnE,UAElD,YADAb,KAAK0E,UAAU,OAAOK,EAAIC,EAAO,QAAQD,EAAI,GAAGC,GAKpD,GAAID,EAAI,GACyD,SAA1DF,SAASC,eAAe,QAAQC,EAAI,GAAGC,GAAQnE,UAElD,YADAb,KAAK0E,UAAU,OAAOK,EAAIC,EAAO,QAAQD,EAAI,GAAGC,M,+BASvD,OACE,yBAAK1E,MAAM,oBACT,wBAAIA,MAAM,QAAV,iBACA,yBAAKf,GAAG,SACL,yBAAKA,GAAG,OAAO0D,MAAO,CAACuC,QAAS,cAC7B,yBAAKjG,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,KACnG,yBAAKT,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,KACnG,yBAAKT,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,MAEvG,yBAAKT,GAAG,OAAO0D,MAAO,CAACuC,QAAS,cAC5B,yBAAKjG,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,KACnG,yBAAKT,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,KACnG,yBAAKT,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,MAEvG,yBAAKT,GAAG,OAAO0D,MAAO,CAACuC,QAAS,cAC5B,yBAAKjG,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,KACnG,yBAAKT,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,KACnG,yBAAKT,GAAG,SAASe,MAAM,QAAQ2C,MAAO,CAACuC,QAAS,cAAejF,QAASP,KAAKyE,UAAU1E,KAAKC,KAAK,EAAE,OAGzG,yBAAKa,UAAU,YACX,yBAAKA,UAAU,qDACX,kBAAC,IAAD,CAAQN,QAASP,KAAK4E,SAAtB,YAEJ,yBAAK/D,UAAU,qDACX,kBAAC,IAAD,CAAQN,QAASP,KAAK2E,OAAtB,gB,GAzGOnE,c,SC0FZiF,E,YA3FX,aAAc,IAAD,8BACT,+CACK9F,MAAO,CACR+F,QAAS,GACTC,WAAY,GACZC,YAAa,mCACbC,YAAa,CACT,CACItG,GAAI,EACJuG,IAAK,oCAET,CACIvG,GAAI,EACJuG,IAAK,oCAET,CACIvG,GAAI,EACJuG,IAAK,oCAET,CACIvG,GAAI,EACJuG,IAAK,oCAET,CACIvG,GAAI,EACJuG,IAAK,oCAET,CACIvG,GAAI,EACJuG,IAAK,oCAET,CACIvG,GAAI,EACJuG,IAAK,sCAKjB,EAAKC,aAAe,EAAKA,aAAahG,KAAlB,gBACpB,EAAKiG,aAAe,EAAKA,aAAajG,KAAlB,gBAvCX,E,0EA0CAkG,GACT,OAAO/F,KAAKgF,MAAMhF,KAAKE,SAAWF,KAAKgF,MAAMe,M,mCAGpCC,GACTlG,KAAKC,SAAL,eACKiG,EAAMC,OAAOvE,KAAOsE,EAAMC,OAAOC,U,qCAKtC,IAAI/F,EAASL,KAAKL,MAAMkG,YAAYxF,OAChCgG,EAAarG,KAAKsG,aAAajG,EAAS,GAC5CL,KAAKC,SAAS,CACV2F,YAAc5F,KAAKL,MAAMkG,YAAYQ,GAAYP,Q,+BAKrD,OACI,6BACI,wDACA,yBAAKjF,UAAU,aACX,2BACIe,KAAK,UACL2E,YAAa,iBACbH,MAAOpG,KAAKL,MAAM+F,QAClBc,SAAWxG,KAAK+F,eAEpB,2BACInE,KAAK,aACL2E,YAAa,oBACbH,MAAOpG,KAAKL,MAAMgG,WAClBa,SAAWxG,KAAK+F,eAEpB,kBAAC,IAAD,CAAQzD,MAAM,OAAO/B,QAASP,KAAKgG,cAAnC,QAGJ,yBAAKnF,UAAU,QACX,yBAAKM,IAAKnB,KAAKL,MAAMiG,YAAaxE,IAAI,KACtC,wBAAIP,UAAU,OAAOb,KAAKL,MAAM+F,SAChC,wBAAI7E,UAAU,UAAUb,KAAKL,MAAMgG,kB,GApF3BnF,aC8EbiG,E,YAjEX,WAAY/G,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACXuE,SAAUX,GAHG,E,sEAOP,IAAD,OA2BDmD,EAAS,WACX,OACI,kBAAC,EAAD,OAWJ,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UA1CzB,WACb,OACI,kBAAC,EAAD,SAyCQ,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,cAAcC,UArC7B,WACf,OACI,kBAAC,EAAD,SAoCQ,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,UAhC7B,WACb,OACI,kBAAC,EAAD,SA+BQ,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,UAAWH,IACvC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAf7B,WACT,OACI,kBAAC,EAAD,SAcQ,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,UAAWH,IACvC,kBAAC,IAAD,CAAOE,KAAK,uBAAuBC,UA9B7B,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACpB,OACI,kBAAC,EAAD,CAAazC,QAAS,EAAK1E,MAAMuE,SAAS6C,QAAO,SAAA1C,GAAO,OAAIA,EAAQ9E,MAAQuH,EAAME,OAAOC,aAAW,QA6B5F,kBAAC,IAAD,CAAUjD,GAAG,gB,GA3DlBxD,aCEJ0G,G,wLAVP,OACI,kBAAC,IAAD,KACI,yBAAKrG,UAAU,OACX,kBAAC,EAAD,Y,GALFL,cCOE2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASR,MACvB,2DCXNS,IAASC,OAAO,kBAAC,EAAD,MAAS3C,SAASC,eAAe,SD4H3C,kBAAmB2C,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.583d41ed.chunk.js","sourcesContent":["export const QUOTES = [\n    {\n        id: 1,\n        text: \"I can bring you in warm… Or I can bring you in cold.\"\n    },   \n    {\n        id: 2,\n        text: \"He said you were the best in the parsec.\"\n    },   \n    {\n        id: 3,\n        text: \"We have you 4 to 1.” “I like those odds.\"\n    },   \n    {\n        id: 4,\n        text: \"You are a Mandalorian. Surely you can ride this young bull.\"\n    },   \n    {\n        id: 5,\n        text: \"Do not self destruct. We’re shooting our way out.\"\n    },   \n    {\n        id: 6,\n        text: \"I’m A Mandalorian. Weapons are a part of my religion.\"\n    },   \n    {\n        id: 7,\n        text: \"I’m not gonna trade anything. These are my parts. They stole from me.\"\n    },   \n    {\n        id: 8,\n        text: \"I have it. I’ve got the egg.\"\n    },   \n    {\n        id: 9,\n        text: \"This is the way.  When one chooses to walk the way of the Mandalore, you are both hunter and prey.\"\n    },   \n    {\n        id: 10,\n        text: \"Here’s what I’m gonna do. I’m gonna walk to my ship, with the kid. And you’re gonna let it happen.\"\n    },   \n    {\n        id: 11,\n        text: \"You got two problems here. You got the bandits and you got the mech. We’ll handle the AT-ST. You gotta protect us when they come out of the woods. And I don’t have to tell you how dangerous they are.\"\n    },   \n    {\n        id: 12,\n        text: \"He’ll get over it. We all do.\"\n    },   \n    {\n        id: 13,\n        text: \"Mandalorian isn’t a race.  It’s a creed.\"\n    },   \n    \n]","import React, { Component } from 'react';\nimport { QUOTES } from '../shared/Quotes';\n\nclass QuoteGenerator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quotes: QUOTES,\n            quoteId: 4\n        };\n        this.RandomQuoteId = this.RandomQuoteId.bind(this);\n    }   \n    \n    RandomQuoteId() {\n        this.setState({\n            quoteId: Math.ceil(Math.random()*(this.state.quotes.length-1))\n        });\n        return;\n    }\n    \n    render() {\n        return (\n            <div >\n                <div class=\"text quote-text\">\"{this.state.quotes[this.state.quoteId].text}\"</div>                \n                <button class=\"btn btn-secondary text quote-button\" onClick={this.RandomQuoteId}>Random Quote</button>\n            </div>\n        );\n    }\n}\n\nexport default QuoteGenerator;","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\n\n\nconst Navigation = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    \n    <div className=\"navblack navbar-dark\">\n      <Navbar expand=\"md\" >\n        <NavbarBrand href=\"/home\">Home</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/characters\">Character Guide</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/episodes\">Episode Guide</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/puzzle\">Puzzle</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/meme\">Meme Generator</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n    \n  );\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport Navigation from './NavigationComponent';\n\nclass Header extends Component {\n    render() {\n        return(\n          <React.Fragment>\n            <div className=\"container logo\"><img src=\"/assets/images/logo.jpg\" className=\"img-fluid logo center\" alt=\"Mandolorian Logo\"></img></div>\n            <Navigation />\n          </React.Fragment>\n        );\n      }\n  }\n\nexport default Header;\n","import React, { Component } from 'react';\nimport QuoteGenerator from './QuoteGeneratorComponent';\nimport Header from './HeaderComponent.js';\nimport Navigation from './NavigationComponent.js';\n\nclass Home extends Component {\n    render() {\n        return(\n            <div>\n                <div class=\"home-background\"></div>\n                <div class=\"summary-text\">After the stories of Jango and Boba Fett, another warrior emerges in the Star Wars universe. The Mandalorian is set after the fall of the Empire and before the emergence of the First Order. We follow the travails of a lone gunfighter in the outer reaches of the galaxy far from the authority of the New Republic.</div>\n                <div class=\"video-background\">\n                    <iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/XmI7WKrAtqs?controls=0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                </div>                    \n                <footer>\n                    <QuoteGenerator />\n                </footer>\n            </div>\n        );\n      }\n  }\n\nexport default Home;","import React, { Component } from 'react';\n\nclass ImageGallery extends Component {\n    render() {\n        return \n              \n          \n      }\n  }\n\nexport default ImageGallery;","import React, { Component } from 'react';\n\nclass Countdown extends Component {\n    render() {\n        return \n              \n          \n      }\n  }\n\nexport default Countdown;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return \n              \n          \n      }\n  }\n\nexport default Footer;","export const CHARACTERS = [\n    {\n        id: 1,\n        name: \"Din Djarin\",\n        imagescn: \"/assets/images/character/mandalorian.png\",\n        imagescn2: \"/assets/images/character/mandalorian2.png\",\n        imagescn3: \"/assets/images/character/mandalorian3.png\",\n        sum: \"Known as the Mandalorian or Mando for short, was a human male Mandalorian foundling who worked as a bounty hunter during the New Republic Era. With his Mandalorian armor and distinctive beskar mask, Djarin was both well-equipped and enigmatic—a stranger whose past was shrouded in mystery. He was a battle-hardened warrior, a man of few words, and a formidable mercenary in an increasingly dangerous galaxy. After the fall of the Galactic Empire, Djarin made a name for himself as a member of the Bounty Hunters' Guild, collecting bounties as he traveled across the galaxy's Outer Rim Territories—far from the authority. \",\n        home:\"Unknown\",\n        Species: \"Human\",\n        gender: \"Male\",\n        eye: \"Brown\",\n        skin: \"Light\",\n        color: \"chtitle chtitlecolor1\",\n    },\n    {\n        id: 2,\n        name: \"The Child\",\n        imagescn: \"/assets/images/character/babyYoda.png\",\n        imagescn2: \"/assets/images/character/babyYoda2.png\",\n        imagescn3: \"/assets/images/character/babyYoda3.png\",\n        sum: \"The Child was born around 41 BBY, and was held at a compound run by Nikto mercenaries on Arvala-7. While still an infant at the age of fifty years old, he was sought by an Imperial who hired a Mandalorian bounty hunter named Din Djarin to retrieve him However, Djarin chose not to leave the Child with the Imperials and saved him from the Imperial remnant facility. After attempting to hide with the Child along the fringes of the galaxy, Djarin returned to Nevarro to deal with the Imperials chasing the Child in hopes of keeping him safe. In the process, the Child became a Mandalorian foundling and a member of Djarins newly-created clan.\",\n        home:\"Dagobah\",\n        Species: \"Yoda's\",\n        gender: \"Male\",\n        eye: \"Brown\",\n        skin: \"Green\",\n        color: \"chtitle chtitlecolor1\",\n    },\n    {\n        id: 3,\n        name: \"Carasynthia Dune\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/character/CaraDune.png\",\n        imagescn2: \"/assets/images/character/CaraDune2.png\",\n        imagescn3: \"/assets/images/character/CaraDune3.png\",\n        sum: \"A human female Alderaanian who served as a shock trooper in the Alliance to Restore the Republic. Dune saw most of her action after the Battle of Endor hunting down former Imperial officials who had become warlords. After the Imperial warlords were seemingly gone and the Alliance became more politically organized, the Alliance focused more on peacekeeping tasks such as escorting delegates and suppressing riots. Dune came to regard these as tasks she had not signed up for. As a result, she left the Alliance and reinvented herself as a mercenary, putting her days of military discipline behind her. \",\n        home:\"Alderaan\",\n        Species: \"Human\",\n        gender: \"Female\",\n        eye: \"Brown\",\n        skin:\"Light\",\n        color: \"chtitle chtitlecolor1\",\n    },\n    {\n        id: 4,\n        name: \"Kuiil\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/character/Kuiil.png\",\n        imagescn2: \"/assets/images/character/Kuiil2.png\",\n        imagescn3: \"/assets/images/character/Kuiil3.png\",\n        sum: \"Kuiil worked for the Galactic Empire as an indentured servant and Kuiil was an Ugnaught male who worked a lifetime to be free of servitude. He came to the out-of-the-way planet of Arvala-7 seeking peace, and worked as a vapor farmer who offered valuable skills to those who could meet his price. Eventually, criminals and mercenaries trespassed on his world[3] during the time of the New Republic, and at some point Kuiil encountered the Mandalorian bounty hunter Din Djarin.[5] After the plan to relieve The Child from being hunted went poorly, Kuiil was eventually tracked down, shot, and killed by Imperial scout troopers on speeder bikes. \",\n        home:\" Arvala-7\",\n        Species: \"Ugnaught\",\n        gender: \"Male\",\n        eye: \"Green\",\n        skin:\"Tan\",\n        color: \"chtitle chtitlecolor1\",\n    },\n    {\n        id: 5,\n        name: \"Greef Karga\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/character/greefKarga.png\",\n        imagescn2: \"/assets/images/character/greefKarga2.png\",\n        imagescn3: \"/assets/images/character/greefKarga3.png\",\n        sum: \"A former disgraced magistrate before becoming an agent of the Bounty Hunters. In around 9 ABY, he met with the bounty hunter named Din Djarin in a cantina to accept four bounties the hunter had captured. Djarin then refused to accept payment in Imperial credits, forcing Karga to pay him in Calamari Flan, after which he told of an unusual job from individual known as the Client associated with an Imperial remnant. Karga was pleased when Djarin completed the job and after congratulating him gave him a new bounty to hunt down. Djarin however soon had a change of heart and rescued the Child. \",\n        home:\"Alderaan\",\n        Species: \"Human\",\n        gender: \"Female\",\n        eye: \"Brown\",\n        skin:\"Dark\",\n        color: \"eptitle eptitlecolor2\",\n    },\n    {\n        id: 6,\n        name: \"IG-11\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/character/IG.png\",\n        imagescn2: \"/assets/images/character/IG2.png\",\n        imagescn3: \"/assets/images/character/IG3.png\",\n        sum: \"a masculine IG-series droid who worked as a bounty hunter around 9 ABY. Part of a series of assassin droids largely outlawed in the galaxy, IG-11 was programmed to follow protocols of the Bounty Hunters' Guild, and had built-in last-ditch failsafes to prevent himself from being captured while working as a hired gun. The droid had a thin body built on an armored substrate that could withstand repeated assaults, and was both reliable and durable. Around 9 ABY, IG-11 was destroyed by Din Djarin while attempting to kill the Child, though he was later repaired and re-programmed by the Ugnaught Kuiil in order to assist the retired vapor farmer.  \",\n        home:\"Alderaan\",\n        Species: \"Assassin Droid\",\n        gender: \"Masculine Programming\",\n        eye: \"Red\",\n        skin:\"Gray and Bronze\",\n        color: \"eptitle eptitlecolor2\",\n    },\n    {\n        id: 7,\n        name: \"The Client\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/character/Client.png\",\n        imagescn2: \"/assets/images/character/Client2.png\",\n        imagescn3: \"/assets/images/character/Client3.png\",\n        sum: \"a masculine IG-series droid who worked as a bounty hunter around 9 ABY. Part of a series of assassin droids largely outlawed in the galaxy, IG-11 was programmed to follow protocols of the Bounty Hunters' Guild, and had built-in last-ditch failsafes to prevent himself from being captured while working as a hired gun. The droid had a thin body built on an armored substrate that could withstand repeated assaults, and was both reliable and durable. Around 9 ABY, IG-11 was destroyed by Din Djarin while attempting to kill the Child, though he was later repaired and re-programmed by the Ugnaught Kuiil in order to assist the retired vapor farmer.  \",\n        home:\"Unknown\",\n        Species: \"Human\",\n        gender: \"Male\",\n        eye: \"Brown\",\n        skin:\"GLight\",\n        color: \"eptitle eptitlecolor2\",\n    },\n    \n    {\n        id: 8,\n        name: \"The Dark Saber\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/character/Saber.png\",\n        imagescn2: \"/assets/images/character/Saber2.png\",\n        imagescn3: \"/assets/images/character/Saber3.png\",\n        sum: \"The Darksaber was an ancient and unique black-bladed lightsaber created by Tarre Vizsla, the first Mandalorian ever inducted into the Jedi Order, prior to 1019 BBY. The weapon was kept in the Jedi Temple after Vizsla's passing, but members of House Vizsla stole the saber in a conflict with the Jedi during the fall of the Old Republic. The Darksaber was passed down, generation to generation, by the ancestors of Pre Vizsla, who held onto the weapon even after the pacifist ideals of the New Mandalorians replaced the warrior ways of Mandalore. By 21 BBY, the Darksaber was in the possession of Pre Vizsla, the leader of Death Watch during the Clone Wars.  \",\n        home:\"Unknown\",\n        Species: \"Kyber Crystal\",\n        gender: \"N/A\",\n        eye: \"N/A\",\n        skin:\"Black\",\n        color: \"eptitle eptitlecolor2\",\n        colorcard: \"epcardcolor3 stretched-link\"\n    },\n    \n];","import React, { Component, useState } from 'react';\nimport { Container, Col, Row, CardImg, CardImgOverlay, \n  CardText, CardBody, Media, CardTitle, CardSubtitle,\n  Popover, PopoverHeader, PopoverBody, Button, } from 'reactstrap';\n  import Fade from 'react-reveal/Bounce';\nimport { Card, Image, Reveal } from 'semantic-ui-react'\nimport { CHARACTERS } from '../shared/Characters';\nimport './CharacterGuides.css';\n\nconst Hidden = () => (\n  <Reveal animated='move'>\n    <Reveal.Content visible>\n      <Image src='https://react.semantic-ui.com/images/wireframe/square-image.png' size='small' />\n    </Reveal.Content>\n    <Reveal.Content hidden>\n      <Image src='https://react.semantic-ui.com/images/avatar/large/chris.jpg' size='small' />\n    </Reveal.Content>\n  </Reveal>\n)\n\nfunction RenderCharacter({ch}) {\n  return (\n    \n    <Col className={ch.color2}  lg={6}>\n    \n    <Card className=\"chcard\">\n      \n    <Media body  >     \n        <CardText className={ch.color}>\n        {ch.name}   \n        </CardText>\n        \n        <CardText >{ch.sum}</CardText>\n        <CardBody>\n        <CardText className=\"text-left\">\n          <Fade left cascade>\n            <div>\n          <img src={ch.imagescn} style={{ padding: '0.1rem'}} alt=\"image1\" /> < em>-- </em>\n          <img src={ch.imagescn2} style={{ padding: '0.1rem'}} alt=\"image1\"/>  < em>-- </em>\n          <img src={ch.imagescn3} style={{ padding: '0.1rem'}} alt=\"image1\" />  \n          </div> \n          </Fade>\n            <strong>Species: </strong> {ch.Species}\n            <br />\n            <strong>Gender :</strong> {ch.gender}\n            <br />\n            <strong>Eye Color :</strong> {ch.eye}\n            <br />\n            <strong>Skin Color :</strong> {ch.skin}\n            <br />\n            <strong> Home World: </strong> {ch.home}\n          </CardText>    \n         </CardBody>   \n\n        </Media >\n       \n    </Card>\n    \n    </Col>\n    \n  );\n}\n\n\nclass CharacterGuide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: CHARACTERS,\n    };\n  }\n    render() {\n      const characterList = this.state.characters.map(ch => {\n        return (\n            <RenderCharacter ch={ch} />\n        );\n      });\n        return(\n          <Container>\n          <Row>\n            {characterList}\n            </Row>\n            </Container>\n \n        ); \n      }\n  }\n\n\nexport default CharacterGuide;","export const EPISODES = [\n    {\n        id: 1,\n        name: \"Chapter 1\",\n        image: \"/assets/images/eps/s01e01vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e01scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e01tb.jpg\",\n        sum_short: \"A Mandalorian bounty hunter tracks a target for a well-paying client.\",\n        sum_long: \"Five years after the fall of the Galactic Empire a Mandalorian bounty hunter hands his latest bounty to Greef Karga. Then he accepts an under-the-table commission on the outpost world of Nevarro from an enigmatic client with apparent Imperial connections, directing him to track down and capture an unnamed fifty-year-old target. While the Client is indifferent to the target's well-being, his colleague Dr. Pershing insists the target be brought back alive. The Mandalorian is given a down payment of a single bar of Beskar steel, sacred to his people. He takes it to a covert Mandalorian enclave where an armorer uses it to make him a pauldron. Arriving at the planet of the target's last reported location, the Mandalorian is aided by a vapor farmer named Kuiil. Tired of the chaos that bounty hunters bring to the area, Kuiil leads him to the target's location and departs. Entering the remote and heavily defended encampment, the Mandalorian reluctantly teams up with bounty hunting droid IG-11 to clear the camp and find the quarry– a child of Yoda's species. When IG-11 attempts to kill the infant per its bounty orders, the Mandalorian shoots and destroys the droid, taking the Child alive.\",\n        director: \"Dave Filoni\",\n        writer: \"Jon Favreau\",\n        color: \"eptitle eptitlecolor1\",\n        colorcard: \"epcardcolor1 stretched-link\"\n    },\n    {\n        id: 2,\n        name: \"Chapter 2: The Child\",\n        image: \"/assets/images/eps/s01e02vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e02scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e02tb.jpg\",\n        sum_short: \"Target in hand, the Mandalorian must now contend with scavengers.\",\n        sum_long: \"While returning to his ship with the Child, the Mandalorian fights and kills a group of rival bounty hunters who ambush him. Nearing his ship, he finds it being stripped by Jawas for parts, and violently confronts them. When he tries to attack their sandcrawler, the Jawas stun him and drop him from its roof. The following day, Kuiil helps him locate the Jawas and negotiate for the return of his ship's components. The Mandalorian agrees to retrieve the egg of a rhinoceros-like Mudhorn in exchange for the stolen parts. He enters the Mudhorn's cave only to be hurled out by the angry beast inside, which attacks him repeatedly, damaging his armor. As the Mudhorn rushes in for the kill, the Child uses the Force to levitate the beast, allowing the surprised Mandalorian to stab and kill it. He collects the egg and takes it to the Jawas, who crack it open and eat its yellow insides. With the trade complete, the Mandalorian and Kuiil work together to repair the ship, allowing the Mandalorian to leave the planet with the Child.\",\n        director: \"Rick Famuyiwa\",\n        writer: \"Jon Favreau\",\n        color: \"eptitle eptitlecolor2\",\n        colorcard: \"epcardcolor2 stretched-link\"\n    },\n    {\n        id: 3,\n        name: \"Chapter 3: The Sin\",\n        image: \"/assets/images/eps/s01e03vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e03scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e03tb.jpg\",\n        sum_short: \"The battered Mandalorian returns to his client for his reward.\",\n        sum_long: \"The Mandalorian delivers the Child to the Client on Nevarro and collects the bounty of 20 bars of Beskar steel. Uncharacteristically, the Mandalorian asks about the Client's plans for the Child, but is told that it's none of his concern. He leaves before conflict arises. Returning to the Mandalorian enclave, the Mandalorian has his damaged armor replaced and weapons upgraded by the Armorer, who forges a full cuirass from most of the Beskar steel, while the remainder goes to support Mandalorian foundling children. The Mandalorian accepts a new job from Greef Karga and prepares his ship to depart. Feeling guilty, he turns back to attack the Client's base, killing most of the stormtroopers guarding it. He rescues the Child from Dr. Pershing's laboratory where it was being experimented on, but chooses not to kill the doctor. On the way back to his ship, the Mandalorian is ambushed by other bounty hunters and Greef Karga, who demand that he hand over the Child. He refuses, and a firefight breaks out. Outnumbered and cornered, the Mandalorian is able to escape only when other Mandalorians arrive from the enclave, attacking the bounty hunters and allowing him to reach his ship with the Child.\",\n        director: \"Deborah Chow\",\n        writer: \"Jon Favreau\",\n        color: \"eptitle eptitlecolor3\",\n        colorcard: \"epcardcolor3 stretched-link\"\n    },\n    {\n        id: 4,\n        name: \"Chapter 4: Sanctuary\",\n        image: \"/assets/images/eps/s01e04vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e04scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e04tb.jpg\",\n        sum_short: \"The Mandalorian teams up with an ex-soldier to protect a village from raiders.\",\n        sum_long: \"Arriving on the sparsely populated forest planet Sorgan, the Mandalorian encounters ex-Rebel shock trooper-turned-mercenary Cara Dune. Following a short brawl, Dune explains that she is hiding after taking early 'retirement', and asks the Mandalorian to leave. While he prepares his ship, two desperate fishermen approach, offering to hire him to drive off a band of Klatoonian raiders. He accepts the job in exchange for lodging, using their credits to enlist Dune's help. At the village, they are housed by Omera, a widowed mother. The Mandalorian confides in her that no one has seen him without his helmet since childhood, when his tribe took him in as an orphan. Despite discovering that the raiders have an old Imperial AT-ST, the villagers refuse to leave, so the Mandalorian and Dune train them to defend themselves. They provoke the raiders at night, with Dune luring the AT-ST into a trap for the Mandalorian to blow up and forcing the remaining raiders to flee. With peace restored, the Mandalorian plans to leave the Child in the village, but a Guild bounty hunter tracks it down and is killed by Dune. Realizing that neither the village nor the Child would be safe, the Mandalorian departs with the Child.\",\n        director: \"Bryce Dallas Howard\",\n        writer: \"Jon Favreau\",\n        color: \"eptitle eptitlecolor4\",\n        colorcard: \"epcardcolor4 stretched-link\"\n    },\n    {\n        id: 5,\n        name: \"Chapter 5: The Gunslinger\",\n        image: \"/assets/images/eps/s01e05vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e05scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e05tb.jpg\",\n        sum_short: \"The Mandalorian helps a rookie bounty hunter who is in over his head.\",\n        sum_long: \"The Mandalorian defeats a pursuing bounty hunter in a dogfight. He lands his damaged ship at a nearby repair dock, run by mechanic Peli Motto in Mos Eisley on Tatooine. He seeks work in a cantina to pay for the repairs, meeting aspiring bounty hunter Toro Calican, who is tracking elite mercenary and assassin Fennec Shand. Calican needs to catch Shand to join the Guild, and the Mandalorian agrees to help when Calican offers to let him keep the money. They capture Shand in the desert, but she destroys one of their speeder bikes, so the Mandalorian goes to get a dewback they passed for transportation. While Calican watches Shand, she tells him that the Mandalorian betrayed the guild, making the bounty on him and the Child worth more than hers. Shand offers to help Calican capture the Mandalorian if he sets her free, but he shoots her instead and rides the remaining speeder bike to the repair dock, taking Motto and the Child hostage. The Mandalorian arrives, uses a flare to disorient Calican, and kills him. He takes Calican's money to pay Motto for the repairs, thanking her before leaving Tatooine. Out in the desert, a mysterious figure approaches Shand's body.\",\n        director: \"Dave Filoni\",\n        writer: \"Dave Filoni\",\n        color: \"eptitle eptitlecolor5\",\n        colorcard: \"epcardcolor5\"\n        \n    },\n    {\n        id: 6,\n        name: \"Chapter 6: The Prisoner\",\n        image: \"/assets/images/eps/s01e06vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e06scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e06tb.jpg\",\n        sum_short: \"The Mandalorian joins a crew of mercenaries on a dangerous mission.\",\n        sum_long: \"The Mandalorian contacts his former partner Ran for work. Ran welcomes him to his space station and informs the Mandalorian that he needs his ship for a five-man job. He is joined by ex-Imperial sharpshooter Mayfeld, Devaronian strongman Burg, droid pilot Q9-0, and Twi'lek knife-expert Xi'an for a mission to rescue Xi'an's brother Qin, a prisoner of the New Republic. After infiltrating the prison ship, they fight through security droids and make it to the control room where the ship's security chief triggers a security beacon before being killed by Xi'an. The crew rescues Qin but double-crosses the Mandalorian. He escapes and defeats each crew member, then captures Qin. Q9-0 finds the Child after deciphering the archived transmission from Greef Karga, but is shot by the Mandalorian before he can harm him. The Mandalorian delivers Qin to Ran and departs with his payment. Ran immediately moves to launch a fighter to kill the Mandalorian, but discovers the New Republic beacon had been placed on Qin, leading a trio of X-wings to Ran's station where they attack. In the final scene, Mayfeld, Burg, and Xi'an are revealed to be locked in a cell on the prison transport, having been spared by the Mandalorian.\",\n        director: \"Rick Famuyiwa\",\n        writer: \"Christopher Yost\",\n        color: \"eptitle eptitlecolor6\",\n        colorcard: \"epcardcolor6\",\n        \n    },\n    {\n        id: 7,\n        name: \"Chapter 7: The Reckoning\",\n        image: \"/assets/images/eps/s01e07vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e07scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e07tb.jpg\",\n        sum_short: \"An old rival extends an invitation for The Mandalorian to make peace.\",\n        sum_long: \"The Mandalorian receives a message from Greef Karga, whose town on Nevarro has been overrun by ex-Imperial troops led by the Client. Karga proposes that the Mandalorian use the Child as bait in order to kill the Client and free the town. In return, Karga will square things with the Guild, which would allow the Mandalorian and the Child to live in peace. Sensing a trap, the Mandalorian recruits Cara Dune and Kuiil to assist him, and Kuiil brings a rebuilt and reprogrammed IG-11 to protect the Child. They meet Karga and his associates, but are attacked by Mynocks. Karga is injured, but the Child uses the Force to heal his wound. In return, Karga kills his associates and confesses his original plan to shoot the Mandalorian and take the Child to the Client. Karga pretends that Dune has captured the Mandalorian, while Kuiil returns the Child to the ship. During the meeting, Moff Gideon's troops open fire on the building and kill the Client and his bodyguards, trapping the Mandalorian, Karga, and Dune inside. Gideon arrives, demanding the Child. In the desert, two scout troopers intercept the Mandalorian's communications and track Kuiil, killing him and taking the Child.\",\n        director: \"Deborah Chow\",\n        writer: \"Jon Favreau\",\n        color: \"eptitle eptitlecolor7\",\n        colorcard: \"epcardcolor7\"\n    },\n    {\n        id: 8,\n        name: \"Chapter 8: Redemption\",\n        image: \"/assets/images/eps/s01e08vul.jpg\",\n        imagescn: \"/assets/images/eps/s01e08scn.jpg\",\n        imagetb: \"/assets/images/eps/s01e08tb.jpg\",\n        sum_short: \"The Mandalorian comes face-to-face with an unexpected enemy.\",\n        sum_long: \"IG-11 rescues the Child from the scout troopers. Gideon warns Karga, Dune, and the Mandalorian that they face certain death unless they agree to assist him. IG-11 arrives and breaks the standoff but Gideon injures the Mandalorian. The Child uses the Force to deflect an attacking stormtrooper's flamethrower back on him. The Mandalorian sends the others through a sewer grate with the Child to find help from the Mandalorian enclave, while IG-11 removes his helmet to administer bacta to his head injury. Joining the others, the Mandalorian finds the covert group of Mandalorians dead or escaped, except for the Armorer. She tasks him to care for the foundling Child like his own, discover its origins, and return it to its kind. The Armorer fashions the Mandalorian his own signet and gives him a jetpack. The group is ferried down an underground lava river, but when they are ambushed by stormtroopers, IG-11 self-destructs to eliminate the enemy. Gideon attacks in a TIE fighter and the Mandalorian uses the jetpack to bring the craft down, but the Moff survives and cuts himself out of the downed ship with a dark sword outlined in white energy.[a] The Mandalorian leaves with the Child, while Karga and Dune stay behind.\",\n        director: \"Taika Waititi\",\n        writer: \"Jon Favreau\",\n        color: \"eptitle eptitlecolor8\",\n        colorcard: \"epcardcolor8\"\n    },\n];","import React, { Component } from 'react';\nimport { Container, Col, Card, Row, CardImg, CardImgOverlay, CardText, CardBody, Media, CardTitle } from 'reactstrap';\nimport { EPISODES } from '../shared/Episodes';\nimport { Link } from 'react-router-dom';\nimport './EpisodeGuide.css';\n\nfunction RenderEpisodeCard({ep}) {\n  return (\n    \n    <Col className={ep.color2} key={ep.id} lg={6}>\n    \n    <Card className=\"epcard\">\n    \n      \n    <Media body  className={ep.colorcard}>\n    <Link to={`/episodes/${ep.id}`}><img src={ep.imagescn} className=\"floatleft\" /> </Link>\n        \n        <CardText className={ep.color}>\n        {ep.name}\n        </CardText>\n      \n        <CardText >{ep.sum_short}</CardText>\n        <CardText ><strong>Directed by:</strong> {ep.director}<br /><strong>Written by:</strong> {ep.writer}</CardText>\n        \n        </Media >\n       \n    </Card>\n    \n    </Col>\n    \n  );\n}\n\n\n\n\n\nclass EpisodeGuide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodes: EPISODES,\n    };\n  }\n    render() {\n      const episodesCardList = this.state.episodes.map(ep => {\n        return (\n            <RenderEpisodeCard ep={ep} />\n        );\n      });\n        return(\n          <Container>\n          <Row>\n            {episodesCardList}\n            </Row>\n            </Container>\n        ); \n      }\n  }\n\nexport default EpisodeGuide;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, Row, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './EpisodeInfo.css';\n\nfunction RenderEpisodePage({episode}) {\n    return(\n        <div className=\"col m-1\">\n            <Card>\n                <CardImg top src={episode.image} alt={episode.name} />\n                <CardBody>\n                <CardText><strong>{episode.name}</strong></CardText>\n                <CardText>{episode.sum_long}</CardText>\n                </CardBody>\n            </Card>\n        </div>        \n    );\n}\n\nfunction NextEpisodeLink({episodeId}) {\n    return\n}\n\nfunction EpisodeInfo(props) {\n    \n    if (props.episode) {\n        \n    \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        \n                        <h2><Link to=\"/episodes\">Episodes</Link> / {props.episode.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderEpisodePage episode={props.episode} />\n                </div>\n            </div>\n        );\n    }\nreturn (\n    <div />\n);\n}\n\nexport default EpisodeInfo;","import React, { Component } from 'react';\nimport './SliderPuzzle.css';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass SliderPuzzle extends Component {\n  constructor(props) {\n      super(props);\n        this.state = {\n        \n        };\n      this.clickTile = this.clickTile.bind(this);\n      this.swapTiles = this.swapTiles.bind(this);      \n      this.reset = this.reset.bind(this);        \n      this.shuffle = this.shuffle.bind(this);        \n    }\n\n    reset() {\n        document.getElementById(\"cell11\").className = \"tile1\";                    \n        document.getElementById(\"cell12\").className = \"tile2\";                    \n        document.getElementById(\"cell13\").className = \"tile3\";                    \n        document.getElementById(\"cell21\").className = \"tile4\";                    \n        document.getElementById(\"cell22\").className = \"tile5\";                    \n        document.getElementById(\"cell23\").className = \"tile6\";                    \n        document.getElementById(\"cell31\").className = \"tile7\";                    \n        document.getElementById(\"cell32\").className = \"tile8\";                    \n        document.getElementById(\"cell33\").className = \"tile9\";                    \n    }\n    \n    shuffle() {\n        for (var row=1;row<=3;row++) { //For each row of the 3x3 grid\n            for (var column=1;column<=3;column++) { //For each column in this row\n            // Get random location\n            var row2=Math.floor(Math.random()*3 + 1); \n            var column2=Math.floor(Math.random()*3 + 1); \n             \n            this.swapTiles(\"cell\"+row+column,\"cell\"+row2+column2); //Swap the look & feel of both cells\n            } \n        }     \n    }\n\n    swapTiles(cell1, cell2) {\n        var temp = document.getElementById(cell1).className;\n        document.getElementById(cell1).className = document.getElementById(cell2).className;\n        document.getElementById(cell2).className = temp;        \n    }\n    \n    clickTile(row, column, e) {\n        var cell = document.getElementById(\"cell\"+row+column);\n        var tile = cell.className;\n\n        if (tile!=\"tile9\") { \n           //Check if empty to right\n           if (column<3) {\n             if ( document.getElementById(\"cell\"+row+(column+1)).className==\"tile9\") {\n               this.swapTiles(\"cell\"+row+column,\"cell\"+row+(column+1));\n               return;\n             }\n           }\n           //Check if empty to left\n           if (column>1) {\n             if ( document.getElementById(\"cell\"+row+(column-1)).className==\"tile9\") {\n               this.swapTiles(\"cell\"+row+column,\"cell\"+row+(column-1));\n               return;\n             }\n           }\n             //Check if empty above\n           if (row>1) {\n             if ( document.getElementById(\"cell\"+(row-1)+column).className==\"tile9\") {\n               this.swapTiles(\"cell\"+row+column,\"cell\"+(row-1)+column);\n               return;\n             }\n           }\n           //Check if empty below\n           if (row<3) {\n             if ( document.getElementById(\"cell\"+(row+1)+column).className==\"tile9\") {\n               this.swapTiles(\"cell\"+row+column,\"cell\"+(row+1)+column);\n               return;\n             }\n           } \n        }\n    }\n\n    render() {\n\n        return(\n          <div class=\"slider-container\">\n            <h3 class=\"text\">Slider Puzzle</h3>\n            <div id=\"table\">\n               <div id=\"row1\" style={{display: 'table-row'}}>\n                  <div id=\"cell11\" class=\"tile1\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,1,1)}></div>\n                  <div id=\"cell12\" class=\"tile2\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,1,2)}></div>\n                  <div id=\"cell13\" class=\"tile3\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,1,3)}></div>\n              </div>\n              <div id=\"row2\" style={{display: 'table-row'}}>\n                  <div id=\"cell21\" class=\"tile4\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,2,1)}></div>\n                  <div id=\"cell22\" class=\"tile5\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,2,2)}></div>\n                  <div id=\"cell23\" class=\"tile6\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,2,3)}></div>\n              </div>\n              <div id=\"row3\" style={{display: 'table-row'}}>\n                  <div id=\"cell31\" class=\"tile7\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,3,1)}></div>\n                  <div id=\"cell32\" class=\"tile8\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,3,2)}></div>\n                  <div id=\"cell33\" class=\"tile9\" style={{display: 'table-cell'}} onClick={this.clickTile.bind(this,3,3)}></div>\n              </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-2 offset-3 mt-4 d-flex justify-content-center\">\n                    <Button onClick={this.shuffle}>Shuffle</Button>\n                </div>\n                <div className=\"col-2 offset-2 mt-4 d-flex justify-content-center\">\n                    <Button onClick={this.reset}>Reset</Button>\n                </div>\n            </div>\n          </div>\n        ); \n      }\n}\n\nexport default SliderPuzzle;","import React, {Component} from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, Row, Label } from 'reactstrap';\n\nclass MemeGenerator extends Component {\n    constructor(){\n        super()\n        this.state ={\n            topText: \"\",\n            bottomText: \"\",\n            randomImage: \"https://i.imgflip.com/3gu5sy.jpg\",\n            allMemesImg: [\n                {\n                    id: 0,\n                    url: 'https://i.imgflip.com/3hohdt.png',\n                },\n                {\n                    id: 1,\n                    url: 'https://i.imgflip.com/3g94gh.png',\n                },\n                {\n                    id: 2,\n                    url: 'https://i.imgflip.com/3glvu4.jpg',\n                },\n                {\n                    id: 3,\n                    url: 'https://i.imgflip.com/3gt6cz.jpg',\n                },\n                {\n                    id: 4,\n                    url: 'https://i.imgflip.com/3hy8aj.jpg',\n                },\n                {\n                    id: 5,\n                    url: 'https://i.imgflip.com/3ioz47.jpg',\n                },\n                {\n                    id: 5,\n                    url: 'https://i.imgflip.com/3gvth5.png',\n                },\n            ]\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.chooseRandom = this.chooseRandom.bind(this);\n    }\n\n    getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n    \n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    chooseRandom(){\n        let length = this.state.allMemesImg.length;\n        let arrayIndex = this.getRandomInt(length - 1);\n        this.setState({\n            randomImage : this.state.allMemesImg[arrayIndex].url\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Baby Yoda Meme Generator</h1>\n                <div className=\"meme-form\">\n                    <input \n                        name=\"topText\"\n                        placeholder= \"Enter top text\"\n                        value={this.state.topText}\n                        onChange= {this.handleChange}\n                    />\n                    <input \n                        name=\"bottomText\"\n                        placeholder= \"Enter bottom text\"\n                        value={this.state.bottomText}\n                        onChange= {this.handleChange}\n                    />\n                    <Button color=\"info\" onClick={this.chooseRandom}>Go!</Button>\n                    </div>\n                    \n                <div className=\"meme\">\n                    <img src={this.state.randomImage} alt=\"\"/>\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport ImageGallery from './ImageGalleryComponent';\nimport Countdown from './CountdownComponent';\nimport Header from './HeaderComponent';\nimport Navigation from './NavigationComponent';\nimport Footer from './FooterComponent';\nimport CharacterGuide from './CharacterGuideComponent';\nimport EpisodeGuide from './EpisodeGuideComponent';\nimport EpisodeInfo from './EpisodeInfoComponent';\nimport SliderPuzzle from './SliderPuzzleComponent';\nimport MemeGenerator from './MemeGeneratorComponent';\nimport { Link, Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { EPISODES } from '../shared/Episodes';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          episodes: EPISODES,\n        };\n      }\n\n      render() {\n\n        const HomePage = () => {\n            return (\n                <Home />\n            );\n        }\n\n        const Characters = () => {\n            return (\n                <CharacterGuide />\n            );\n        }\n\n        const Episodes = () => {\n            return (\n                <EpisodeGuide />\n            );\n        }\n\n        const EpisodeWithId = ({match}) => {\n            return (\n                <EpisodeInfo episode={this.state.episodes.filter(episode => episode.id === +match.params.episodeId)[0] } />\n            );\n        }\n\n\n        const Puzzle = () => {\n            return (\n                <SliderPuzzle />\n              );\n              }\n\n        const Meme = () => {\n            return (\n                <MemeGenerator />\n\n            );\n        }\n        \n            return (\n                <div>\n                    <Header />\n                    <Switch>\n                        <Route exact path='/home' component={HomePage} />\n                        <Route exact path='/characters' component={Characters} />\n                        <Route exact path='/episodes' component={Episodes} />\n                        <Route exact path='/puzzle' component={Puzzle} />                        \n                        <Route exact path='/meme' component={Meme} />\n                        <Route exact path='/puzzle' component={Puzzle} />                        \n                        <Route path='/episodes/:episodeId' component={EpisodeWithId} />\n                        <Redirect to='/home' />\n                    </Switch>\n                </div>\n            );\n        }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}